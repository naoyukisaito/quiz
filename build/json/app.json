[
  {
    "ttl": "Q.1",
    "question": "運用しやすいコードとして定めているポリシーは？(複数回答可)",
    "answers": [
      { "choices": "わかりやすい", "id": "1" },
      { "choices": "探しやすい", "id": "2" },
      { "choices": "再利用しやすい", "id":"3" },
      { "choices": "拡張しにくい", "id":"4" }
    ],
    "correct": [1, 2, 3],
    "myAnswer": []
  },
  {
    "ttl": "Q.2",
    "question": "表示速度を速めることで何を実現させることが出来ますか？(複数回答可)",
    "answers": [
      { "choices": "ユーザーの使い心地の良さ", "id": "5" },
      { "choices": "コンバーション向上", "id": "6" },
      { "choices": "UI", "id":"7" },
      { "choices": "見た目", "id":"8" }
    ],
    "correct": [1, 2],
    "myAnswer": []
  },
  {
    "ttl": "Q.3",
    "question": "高速化の対応として正しいものは？(複数回答可)",
    "answers": [
      { "choices": "外部ファイルの数を減らす", "id": "9" },
      { "choices": "外部ファイルの数を増やす", "id": "10" },
      { "choices": "jsファイルを</body>直前に配置", "id":"11" },
      { "choices": "iframeを使用", "id":"12" }
    ],
    "correct": [1, 3],
    "myAnswer": []
  },
  {
    "ttl": "Q.4",
    "question": "改行＆インデントについて正しいものは？(複数回答可)",
    "answers": [
      { "choices": "インデントはスペース", "id": "13" },
      { "choices": "必ず要素ごとに改行", "id": "14" },
      { "choices": "半角4つ分でインデント", "id":"15" },
      { "choices": "自由", "id":"16" }
    ],
    "correct": [3],
    "myAnswer": []
  },
  {
    "ttl": "Q.5",
    "question": "head内定義ルールとして正しいものは？(複数回答可)",
    "answers": [
      { "choices": "cssファイルよりもjsファイルのほうが先に記述", "id": "17" },
      { "choices": "cssファイルはhead内に配置", "id": "18" },
      { "choices": "OGP設定は全て最初に記述", "id":"19" },
      { "choices": "description, keywordは指定しなくても良い", "id":"20" }
    ],
    "correct": [2],
    "myAnswer": []
  },
  {
    "ttl": "Q.6",
    "question": "静的ファイルのパスとして正しいものは？(複数回答可)",
    "answers": [
      { "choices": "絶対パス", "id": "21" },
      { "choices": "相対パス", "id": "22" },
      { "choices": "ルート相対パス", "id":"23" },
      { "choices": "特に決まりはない", "id":"24" }
    ],
    "correct": [3],
    "myAnswer": []
  },
  {
    "ttl": "Q.7",
    "question": "属性の記述順ルールとして正しいものは？(複数回答可)",
    "answers": [
      { "choices": "基本的にhref属性、src属性は最初に記述する...ex: <img src= alt= class= >", "id": "25" },
      { "choices": "id属性 class属性はid classの順で最初に記述する...ex: <input id= class= type= value= checked>", "id": "26" },
      { "choices": "id属性 class属性はid classの順で最後に記述する...ex: <a href= id= class= >", "id":"27" },
      { "choices": "複数のクラス名を記述する際はjs用のclassを後ろに記述する...ex: <div class='content jsc-content'>", "id":"28" }
    ],
    "correct": [1, 3, 4],
    "myAnswer": []
  },
  {
    "ttl": "Q.8",
    "question": "CSSの軽量なコード記述について正しいものは？(複数回答可)",
    "answers": [
      { "choices": "margin-topとmargin-bottomに数値を指定しない場合もショートハンドを使用する...ex:margin: 0 auto;", "id": "29" },
      { "choices": "「0」も単位を記述する...ex:margin: 0px;", "id": "30" },
      { "choices": "ショートハンドを極力使用する...ex:margin: 10px 20px 5px 5px;", "id":"31" },
      { "choices": "同じ値を統合して指定する...ex:margin: 10px 20px 20px 10px; → margin: 10px 20px;", "id":"32" }
    ],
    "correct": [3, 4],
    "myAnswer": []
  },
  {
    "ttl": "Q.9",
    "question": "CSSコーディング規則について正しいものは？(複数回答可)",
    "answers": [
      { "choices": "既存のスタイルは必ず打ち消して使用する", "id": "33" },
      { "choices": "要件に該当する箇所以外のスタイルには、手を加えません", "id": "34" },
      { "choices": "アイコンは画像で作成します", "id":"35" },
      { "choices": "!importantは極力は使用しません", "id":"36" }
    ],
    "correct": [2, 4],
    "myAnswer": []
  },
  {
    "ttl": "Q.10",
    "question": "コードフォーマットについて正しいものは？(複数回答可)",
    "answers": [
      { "choices": "ここカラダはハイフン記法...ex:.sample-code", "id": "37" },
      { "choices": "ここカラダはキャメル記法...ex:.sampleCode", "id": "38" },
      { "choices": "健保はキャメル記法...ex:.sampleCode", "id":"39" },
      { "choices": "健保はハイフン記法...ex:.sample-code", "id":"40" }
    ],
    "correct": [2, 4],
    "myAnswer": []
  },
  {
    "ttl": "Q.11",
    "question": "CSSコーディングルールとして正しいものは？(複数回答可)",
    "answers": [
      { "choices": "カラーコードは、大文字3桁で省略して記述する...ex:color: #FFF;", "id": "41" },
      { "choices": "小数点表記は0を省略する(0.5は.5とする)...ex: opacity: .5;", "id": "42" },
      { "choices": "0pxの場合、単位は使用しない...ex:margin-top: 0;", "id":"43" },
      { "choices": "margin-bottomの指定は避ける", "id":"44" }
    ],
    "correct": [3, 4]
  },
  {
    "ttl": "Q.12",
    "question": "CSSコーディングルールとして正しいものは？(複数回答可)",
    "answers": [
      { "choices": "displayプロパティはtable-cellのみの使用はしない", "id": "45" },
      { "choices": "タイプセレクタへのスタイル指定はしない...ex:.header p { font-size: 12px }", "id": "46" },
      { "choices": "小セレクタ、子孫セレクタを極力使わない...ex: .hoge .hogehoge .hogehogehoge { font-size: 12px }", "id":"47" },
      { "choices": "ブロック要素へはwidth: 100%;を必ず指定する", "id":"48" }
    ],
    "correct": [1, 2, 3],
    "myAnswer": []
  }
]